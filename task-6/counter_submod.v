/* Generated by Yosys 0.45 (git sha1 9ed031ddd, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3) */

(* cells_not_processed =  1  *)
(* src = "counter.v:1.1-39.10" *)
module counter(clk, rst, mode, cnt);
  (* src = "counter.v:36.20-36.33" *)
  wire [9:0] _00_;
  (* src = "counter.v:10.5-30.8" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8" *)
  wire [9:0] _01_;
  (* src = "counter.v:10.5-30.8" *)
  (* unused_bits = "0 1 2 3 4 5 6 7 8" *)
  wire [9:0] _02_;
  (* src = "counter.v:22.17-22.31" *)
  wire _03_;
  (* src = "counter.v:10.5-30.8" *)
  (* unused_bits = "0 1 3 4 5 6 7 8 9" *)
  wire [9:0] _04_;
  (* src = "counter.v:10.5-30.8" *)
  (* unused_bits = "0 1 2 4 5 6 7 8 9" *)
  wire [9:0] _05_;
  (* src = "counter.v:13.17-13.32" *)
  wire _06_;
  (* src = "counter.v:3.17-3.20" *)
  input clk;
  wire clk;
  (* src = "counter.v:6.29-6.32" *)
  output [9:0] cnt;
  reg [9:0] cnt = 10'h3ce;
  (* hdlname = "decrement cnt" *)
  (* src = "counter.v:6.29-6.32" *)
  wire [9:0] \decrement.cnt ;
  (* hdlname = "decrement n1" *)
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] \decrement.n1 ;
  (* hdlname = "increment cnt" *)
  (* src = "counter.v:6.29-6.32" *)
  wire [9:0] \increment.cnt ;
  (* hdlname = "increment n1" *)
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] \increment.n1 ;
  (* src = "counter.v:5.17-5.21" *)
  input mode;
  wire mode;
  (* src = "counter.v:4.17-4.20" *)
  input rst;
  wire rst;
  (* src = "counter.v:8.22-8.29" *)
  wire [9:0] summand;
  assign _00_ = $signed(cnt) + (* src = "counter.v:36.20-36.33" *) $signed({ summand[9], summand[9], summand[9], summand[9], summand[9], summand[4:0] });
  (* src = "counter.v:32.5-38.8" *)
  always @(posedge clk)
    if (rst) cnt <= 10'h3ce;
    else cnt <= _00_;
  assign _01_[9] = $signed(cnt) >= (* src = "counter.v:23.21-23.37" *) $signed(10'h323);
  assign _02_[9] = $signed(cnt) >= (* src = "counter.v:26.26-26.42" *) $signed(10'h32c);
  assign _03_ = $signed(cnt) != (* src = "counter.v:22.17-22.31" *) $signed(10'h3fe);
  assign { \decrement.n1 [3], \decrement.n1 [9], \decrement.n1 [4] } = _03_ ? (* full_case = 32'd1 *) (* src = "counter.v:22.17-22.31|counter.v:22.13-28.16" *) { 1'h0, _01_[9], _01_[9] } : { _02_[9], _02_[9], 1'h0 };
  assign _04_[2] = $signed(cnt) <= (* src = "counter.v:14.21-14.36" *) $signed(10'h0e6);
  assign _05_[3] = $signed(cnt) <= (* src = "counter.v:17.26-17.41" *) $signed(10'h0e1);
  assign _06_ = $signed(cnt) != (* src = "counter.v:13.17-13.32" *) $signed(10'h3f0);
  assign \increment.n1 [3:2] = _06_ ? (* full_case = 32'd1 *) (* src = "counter.v:13.17-13.32|counter.v:13.13-19.16" *) { 1'h0, _04_[2] } : { _05_[3], 1'h0 };
  assign { summand[9], summand[4:0] } = mode ? (* full_case = 32'd1 *) (* src = "counter.v:12.13-12.17|counter.v:12.9-29.12" *) { 2'h0, \increment.n1 [3:2], \increment.n1 [3:2] } : { \decrement.n1 [9], \decrement.n1 [4:3], \decrement.n1 [9], \decrement.n1 [9], \decrement.n1 [4] };
  assign \decrement.cnt  = cnt;
  assign { \decrement.n1 [8:5], \decrement.n1 [2:0] } = 7'hxx;
  assign \increment.cnt  = cnt;
  assign { \increment.n1 [9:4], \increment.n1 [1:0] } = 8'hxx;
  assign summand[8:5] = { summand[9], summand[9], summand[9], summand[9] };
endmodule
