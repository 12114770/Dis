/* Generated by Yosys 0.45 (git sha1 9ed031ddd, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3) */

(* cells_not_processed =  1  *)
(* src = "counter.v:1.1-39.10" *)
module counter(clk, rst, mode, cnt);
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] _00_;
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] _01_;
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] _02_;
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] _03_;
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] _04_;
  (* src = "counter.v:10.5-30.8" *)
  wire [9:0] _05_;
  (* src = "counter.v:36.20-36.33" *)
  wire [9:0] _06_;
  (* src = "counter.v:13.17-13.32" *)
  wire _07_;
  (* src = "counter.v:22.17-22.31" *)
  wire _08_;
  (* src = "counter.v:3.17-3.20" *)
  input clk;
  wire clk;
  (* init = 10'h3ce *)
  (* src = "counter.v:6.29-6.32" *)
  output [9:0] cnt;
  wire [9:0] cnt;
  (* src = "counter.v:5.17-5.21" *)
  input mode;
  wire mode;
  (* src = "counter.v:4.17-4.20" *)
  input rst;
  wire rst;
  (* src = "counter.v:8.22-8.29" *)
  wire [9:0] summand;
  (* src = "counter.v:36.20-36.33" *)
  \$add  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd10)
  ) _09_ (
    .A(cnt),
    .B({ summand[9], summand[9], summand[9], summand[9], summand[9], summand[4:0] }),
    .Y(_06_)
  );
  (* src = "counter.v:32.5-38.8" *)
  \$sdff  #(
    .CLK_POLARITY(32'd1),
    .SRST_POLARITY(32'd1),
    .SRST_VALUE(10'h3ce),
    .WIDTH(32'd10)
  ) _10_ (
    .CLK(clk),
    .D(_06_),
    .Q(cnt),
    .SRST(rst)
  );
  (* src = "counter.v:23.21-23.37" *)
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) _11_ (
    .A(cnt),
    .B(10'h323),
    .Y(_04_[9])
  );
  (* src = "counter.v:26.26-26.42" *)
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) _12_ (
    .A(cnt),
    .B(10'h32c),
    .Y(_05_[9])
  );
  (* src = "counter.v:14.21-14.36" *)
  \$le  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) _13_ (
    .A(cnt),
    .B(10'h0e6),
    .Y(_01_[2])
  );
  (* src = "counter.v:17.26-17.41" *)
  \$le  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) _14_ (
    .A(cnt),
    .B(10'h0e1),
    .Y(_02_[3])
  );
  (* src = "counter.v:13.17-13.32" *)
  \$ne  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) _15_ (
    .A(cnt),
    .B(10'h3f0),
    .Y(_07_)
  );
  (* src = "counter.v:22.17-22.31" *)
  \$ne  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) _16_ (
    .A(cnt),
    .B(10'h3fe),
    .Y(_08_)
  );
  (* full_case = 32'd1 *)
  (* src = "counter.v:22.17-22.31|counter.v:22.13-28.16" *)
  \$mux  #(
    .WIDTH(32'd3)
  ) _17_ (
    .A({ _05_[9], _05_[9], 1'h0 }),
    .B({ 1'h0, _04_[9], _04_[9] }),
    .S(_08_),
    .Y({ _03_[3], _03_[9], _03_[4] })
  );
  (* full_case = 32'd1 *)
  (* src = "counter.v:13.17-13.32|counter.v:13.13-19.16" *)
  \$mux  #(
    .WIDTH(32'd2)
  ) _18_ (
    .A({ _02_[3], 1'h0 }),
    .B({ 1'h0, _01_[2] }),
    .S(_07_),
    .Y(_00_[3:2])
  );
  (* full_case = 32'd1 *)
  (* src = "counter.v:12.13-12.17|counter.v:12.9-29.12" *)
  \$mux  #(
    .WIDTH(32'd6)
  ) _19_ (
    .A({ _03_[9], _03_[4:3], _03_[9], _03_[9], _03_[4] }),
    .B({ 2'h0, _00_[3:2], _00_[3:2] }),
    .S(mode),
    .Y({ summand[9], summand[4:0] })
  );
  assign { _00_[9:4], _00_[1:0] } = { 6'h00, _00_[3:2] };
  assign { _01_[9:3], _01_[1:0] } = { 8'h00, _01_[2] };
  assign { _02_[9:4], _02_[2:0] } = { 7'h00, _02_[3], 1'h0 };
  assign { _03_[8:5], _03_[2:0] } = { _03_[9], _03_[9], _03_[9], _03_[9], _03_[9], _03_[9], _03_[4] };
  assign _04_[8:0] = { _04_[9], _04_[9], _04_[9], _04_[9], _04_[9], 1'h0, _04_[9], _04_[9], _04_[9] };
  assign _05_[8:0] = { _05_[9], _05_[9], _05_[9], _05_[9], 1'h0, _05_[9], _05_[9], _05_[9], 1'h0 };
  assign summand[8:5] = { summand[9], summand[9], summand[9], summand[9] };
endmodule
